from aiogram import types, Dispatcher, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from utils.aiogram_helper import SendMessage
from utils.states.user import FSMStart


async def start_command(message: types.Message, state: FSMContext):
    await state.set_state(FSMStart.start)
    await message.delete()
    await SendMessage(event=message,
                      text=f'<b>–ü—Ä–∏–≤–µ—Ç, <code>{message.from_user.first_name}</code> üëã\n\n'
                           '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ .pdf —Ñ–∞–π–ª–æ–≤.</b> \n\n'
                           '‚ùóÔ∏è<i>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–∫–∏–¥—ã–≤–∞—Ç—å –Ω–µ –±–æ–ª—å—à–µ 10 —Ñ–∞–π–ª–æ–≤ –∑–∞ 1 —Ä–∞–∑</i>',
                      handler_name='start_command',
                      state=state).custom_send()


async def main_menu(call: types.CallbackQuery, state: FSMContext):
    await state.set_state(FSMStart.start)
    await SendMessage(event=call,
                      text=f'<b>–ü—Ä–∏–≤–µ—Ç, <code>{call.from_user.first_name}</code> üëã\n\n'
                           '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ .pdf —Ñ–∞–π–ª–æ–≤.</b> \n\n'
                           '‚ùóÔ∏è<i>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–∫–∏–¥—ã–≤–∞—Ç—å –Ω–µ –±–æ–ª—å—à–µ 10 —Ñ–∞–π–ª–æ–≤ –∑–∞ 1 —Ä–∞–∑</i>',
                      handler_name='main_menu',
                      state=state).custom_send()


def register_start_handler(dp: Dispatcher):
    dp.message.register(start_command, Command('start'))
    dp.callback_query.register(main_menu, F.data == 'main_menu')
